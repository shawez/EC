# Title: Figure 1
# Author: Shawez Khan

# Libraries
library(Seurat)
library(data.table)
library(dplyr)
library(harmony)

# Load Clean CD8 object
load(file= "/Functional heterogeneity/inHouse_Data/yTil_inHouse//normalizedData/yTIL_objects/ytil.clean2_CD8.RData")
CD8 <- ytil
rm(ytil)

# Load Clean CD4 object
load(file= "/Functional heterogeneity/inHouse_Data/yTil_inHouse//normalizedData/yTIL_objects/230726_ytil_cleanup_prep2_cd4.RData")
CD4 <- ytil
rm(ytil)

# Combined Ytil 
yTil <- merge(CD8, y = CD4, add.cell.ids = c("CD8", "CD4"), project = "yTil")

# notice the cell names now have an added identifier
head(colnames(yTil))

#reprocessing
yTil <- SCTransform(yTil,
                    vst.flavor = "v2",
                    assay = "RNA",
                    new.assay.name = "SCT",
                    vars.to.regress = c("percent.mt", "S.Score", "G2M.Score"),
                    return.only.var.genes = F,
                    verbose = TRUE)

yTil <- RunPCA(yTil,
               npcs = 30,
               verbose = TRUE)

yTil$cell.co <- paste(yTil$CD4_CD8, yTil$coculture, sep = " ")

yTil <- RunHarmony(yTil,
                   c("batch"),
                   assay.use = "SCT")

yTil <- RunUMAP(yTil,
                reduction = "harmony",
                dims = 1:30,
                verbose = TRUE,
                min.dist = 0.1,
                spread = 2,
                assay = "SCT",
                seed.use = 2022)

yTil <- FindNeighbors(yTil,
                      reduction = "harmony",
                      dims = 1:30,
                      verbose = TRUE,
                      k.param = 75)

yTil <- FindClusters(yTil,
                     resolution = 1,
                     verbose = TRUE)

#check how it looks
ytil.dim1 <- DimPlot(yTil, reduction = "umap", group.by = "seurat_clusters", pt.size = 2, label = TRUE)
yTil.dim2 <- DimPlot(yTil, reduction = "umap", group.by = "coculture", pt.size = 2, order = T)
yTil.dim3 <- DimPlot(yTil, reduction = "umap", group.by = "CD4_CD8", pt.size = 2, order = T)
yTil.dim4 <- DimPlot(yTil, reduction = "umap", group.by = "cell.co", pt.size = 2, order = T)
#ytil.dim4 <- DimPlot(ytil, reduction = "umap", group.by = "donor", pt.size = 2, label = TRUE)

#((ytil.dim1/ytil.dim2)|(ytil.dim3/ytil.dim4))

yTil.dim2|yTil.dim3|yTil.dim4 

save(yTil , file= "/Functional heterogeneity/inHouse_Data/yTil_inHouse//normalizedData/yTIL_objects/merged_yTil.Rdata")
